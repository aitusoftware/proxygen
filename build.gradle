//buildscript {
//    repositories {
//        mavenCentral()
//    }
//}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
sourceCompatibility = 1.9
targetCompatibility = 1.9

group = 'com.aitusoftware'
version = '0.0.1'

repositories {
    jcenter()
    mavenCentral()
}


ext {
    if (!project.hasProperty('sonatypeUrl')) sonatypeUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    if (!project.hasProperty('sonatypeUsername')) sonatypeUsername = ''
    if (!project.hasProperty('sonatypePassword')) sonatypePassword = ''

}
ext.moduleName = 'com.aitusoftware.proxygen'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}



artifacts {
    archives sourcesJar, javadocJar
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'junit',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
}

ext {

    if (!project.hasProperty('ossrhUsername')) {
        ossrhUsername = ''
    }

    if (!project.hasProperty('ossrhPassword')) {
        ossrhPassword = ''
    }
}

def projectPom = {
    name = 'proxygen'
    packaging = 'pom'
    description = 'Proxy generator for transport'
    url = 'https://github.com/aitusoftware/proxygen.git'

    scm {
        connection = 'scm:git:https://github.com/aitusoftware/proxygen.git'
        developerConnection = 'scm:git:https://github.com/aitusoftware/proxygen.git'
        url = 'https://github.com/aitusoftware/proxygen.git'
    }

    licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            id = 'epickrram'
            name = 'Mark Price'
            email = 'mark@aitusoftware.com'
            url = 'https://github.com/aitusoftware'
        }
    }
}

install {
    repositories.mavenInstaller.pom.project(projectPom)
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        repository(url: sonatypeUrl) {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project(projectPom)
    }
}
